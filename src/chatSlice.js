import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';

const initialState = {
    data:[]
  };


// The function below is called a thunk and allows us to perform async logic. It
// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This
// will call the thunk with the `dispatch` function as the first argument. Async
// code can then be executed and other actions can be dispatched. Thunks are
// typically used to make async requests.

export const storeChat = () => {

}

export const retrieveChat = () => {
    
}


export const chatSlice = createSlice({
  name: 'chat',
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    store: (state) =>{
    },
    retrieve: (state) => {
    }
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
});



export default counterSlice.reducer;
